import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.compose import ColumnTransformer

# Load dataset
df = pd.read_csv("Netflix_Engagement_Report_2023_Jan-Jun_cleaned.csv")
print("Dataset Shape:", df.shape)
print(df.head())

print("\nInfo:")
print(df.info())

print("\nMissing Values:\n", df.isnull().sum())

print("\nSummary Statistics:\n", df.describe())

#  Univariate Analysis
sns.histplot(df['Hours Viewed'], kde=True)
plt.title("Distribution of Hours Viewed")
plt.show()

# Bivariate Analysis
sns.boxplot(data=df, x='Available Globally', y='Hours Viewed')
plt.title("Availability vs Hours Viewed")
plt.show()

# Convert Release Date to datetime
df['Release Date'] = pd.to_datetime(df['Release Date'], errors='coerce')

# Extract year and month
df['Release Year'] = df['Release Date'].dt.year
df['Release Month'] = df['Release Date'].dt.month

sns.scatterplot(data=df, x='Release Year', y='Hours Viewed')
plt.title("Release Year vs Hours Viewed")
plt.show()

#  Outlier Detection

from scipy.stats import zscore

z_scores = np.abs(zscore(df[['Hours Viewed']].fillna(0)))
outliers = (z_scores > 3).any(axis=1)
print(f"Outliers detected: {outliers.sum()}")

df_clean = df[~outliers].copy()
print("Shape after outlier removal:", df_clean.shape

#  Feature Engineering

df_clean['Is Recent'] = df_clean['Release Year'] >= 2020

# Drop original date column
df_clean.drop(columns=['Release Date'], inplace=true)

#  Encoding & Scaling

categorical_features = ['Available Globally', 'Is Recent']
numerical_features = ['Hours Viewed']

preprocessor = ColumnTransformer([
    ('onehot', OneHotEncoder(drop='first'), categorical_features),
    ('scale', StandardScaler(), numerical_features)
], remainder='drop')

X = df_clean.drop(['Title'], axis=1)  # Title isn't useful for modeling
X_processed = preprocessor.fit_transform(X)

print("Feature matrix shape after encoding and scaling:", X_processed.shape)



