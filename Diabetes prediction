import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline

# Load dataset
df = pd.read_csv("pima-indians-diabetes.csv")
df.columns = ["Pregnancies", "Glucose", "BloodPressure", "SkinThickness", "Insulin",
              "BMI", "DiabetesPedigreeFunction", "Age", "Outcome"]

print("Dataset Shape:", df.shape)
print(df.head())

print("\nInfo:")
print(df.info())

print("\nMissing Values:\n", df.isnull().sum())

print("\nSummary Statistics:\n", df.describe())

# --- Univariate Plot ---
sns.histplot(df['Glucose'], kde=True)
plt.title("Glucose Distribution")
plt.show()

# --- Bivariate Plots ---
sns.scatterplot(data=df, x='Age', y='Glucose', hue='Outcome')
plt.title("Age vs Glucose (Colored by Outcome)")
plt.show()

sns.boxplot(data=df, x='Outcome', y='BMI')
plt.title("BMI by Outcome")
plt.show()

# --- Outlier Detection ---
from scipy.stats import zscore

z_scores = np.abs(zscore(df[['Glucose', 'BloodPressure', 'BMI', 'Age']]))
outliers = (z_scores > 3).any(axis=1)
print(f"Outliers detected: {outliers.sum()}")

df_clean = df[~outliers].copy()
print("Shape after outlier removal:", df_clean.shape)

# --- Feature Engineering ---
df_clean['BMI_Age'] = df_clean['BMI'] * df_clean['Age']
df_clean['PregnancyPerAge'] = df_clean['Pregnancies'] / df_clean['Age']

# Final feature list
numerical_features = ['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness',
                      'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age',
                      'BMI_Age', 'PregnancyPerAge']

# --- Column Transformer
preprocessor = ColumnTransformer([
    ('scale', StandardScaler(), numerical_features)
], remainder='passthrough')

X = df_clean.drop('Outcome', axis=1)
y = df_clean['Outcome']

X_processed = preprocessor.fit_transform(X)

print("Feature matrix shape after scaling:", X_processed.shape)
print("Target shape:", y.shape)
